name: Deploy Frontend to EC2 machine

on:
    push:
        branches:
            - main

env:
    DOCKER_IMAGE_NAME: imagegen-frontend
    EC2_USERNAME: ubuntu            

jobs:
    deploy:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Setup Docker BuildX
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                username: ${{ secrets.DOCKER_HUB_USERNAME }}
                password: ${{ secrets.DOCKER_HUB_TOKEN }}

            - name: Build Docker Image and push to Docker Hub
              uses: docker/build-push-action@v2
              with:
                context: ./imgGen
                file: ./imgGen/Dockerfile
                push: true
                tags: ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest
                build-args: |
                  VITE_BACKEND_URL=${{ secrets.BACKEND_URL }}

            - name: Deploy to Ec2
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.EC2_Host }}
                username: ${{ env.EC2_USERNAME}}
                key: ${{ secrets.EC2_Key }}
                script : |
                    # Stop and remove the existing container
                    docker stop ${{ env.DOCKER_IMAGE_NAME}} || true
                    docker rm ${{ env.DOCKER_IMAGE_NAME }} || true

                    # remove old image
                    docker rmi ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest || true

                    # pull new image
                    docker pull ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest 

                    # run new container
                    docker run -d \
                    --name ${{ env.DOCKER_IMAGE_NAME }} \
                    -p 80:80 \
                    --restart unless-stopped \
                    ${{ secrets.DOCKER_HUB_USERNAME}}/${{ env.DOCKER_IMAGE_NAME }}:latest

                    echo "Deployment Successful"
                    
                    
